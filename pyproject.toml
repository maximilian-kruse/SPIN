[project]
authors = [{ name = "Maximilian Kruse", email = "maxkruse1604@gmail.com" }]
maintainers = [
    { name = "Maximilian Kruse", email = "maxkruse1604@gmail.com" },
]
description = "Non-Parametric Inference for Diffusion Processes"
name = "spin"
requires-python = ">= 3.12"
dynamic = ["version"]
readme = "README.md"
license = { text = "MIT" }
keywords = ["Bayesian inference", "hippylib", "stochastic processes"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
]
urls = { repository = "https://github.com/UQatKIT/SPIN" , documentation = "https://uqatkit.github.io/SPIN"}


# --------------------------------------------------------------------------------------------------
[tool.pixi.pypi-dependencies]
spin = { path = ".", editable = true }
hippylib = ">=3.1.0,<4"

[tool.pixi.dependencies]
fenics = "==2019.1.0"
numpy = ">=1.26.4,<2"
beartype = ">=0.19.0,<0.20"
scipy = ">=1.15.1,<2"

[tool.pixi.feature.dev.dependencies]
jupyter = ">=1.1.1,<2"
matplotlib = ">=3.10.0,<4"
seaborn = ">=0.13.2,<0.14"
pandas = ">=2.2.3,<3"
pre-commit = ">=4.1.0,<5"
rich = ">=13.9.4,<14"

[tool.pixi.feature.style.dependencies]
ruff = ">=0.9.3,<0.10"

[tool.pixi.feature.test.dependencies]
pytest = ">=8.3.4,<9"
pytest-cov = ">=6.0.0,<7"
pytest-xdist = ">=3.6.1,<4"

[tool.pixi.feature.docs.dependencies]
git-cliff = ">=2.6.1,<3"
mkdocs-material = ">=9.5.50,<10"
mkdocs-autorefs = ">=1.3.0,<2"
mkdocstrings-python = ">=1.13.0,<2"


# --------------------------------------------------------------------------------------------------
[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64"]

[tool.pixi.environments]
default = { solve-group = "default" }
dev = { features = ["dev"], solve-group = "default" }
style = { features = ["dev", "style"], solve-group = "default" }
test = { features = ["dev", "test"], solve-group = "default" }
docs = { features = ["dev", "docs"], solve-group = "default" }
all = { features = ["dev", "docs", "style", "test"], solve-group = "default" }


# --------------------------------------------------------------------------------------------------
[tool.pixi.tasks]
format = "ruff format"
serve-docs = "mkdocs serve"
build-docs = "mkdocs build"
changelog = "git-cliff"


# --------------------------------------------------------------------------------------------------
[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"


# --------------------------------------------------------------------------------------------------
[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "COM812",
    "EM101",
    "EM102",
    "FBT001",
    "FBT002",
    "FBT003",
    "F722",
    "F821",
    "ISC001",
    "PD008",
    "PD011",
    "PIE790",
    "PLR2004",
    "PT003",
    "RET504",
    "S101",
    "TRY003",
]
pydocstyle.convention = "google"


# --------------------------------------------------------------------------------------------------
[tool.pytest.ini_options]
testpaths = ["test"]
addopts = [
    "-v",
    "--import-mode=importlib",
    "--cov=eikonax",
    "--cov-config=.coveragerc",
]
markers = [
    "unit: unit tests",
    "integration: integration tests",
    "compile: requires compilation",
    "slow: tests with long runtime",
]
